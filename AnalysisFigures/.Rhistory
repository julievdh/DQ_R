load(ABC.Interact.dat)
?ABC.Interact.dat
data(ABC.Interact.dat)
View(ABC.Interact.dat)
interaction.ABC.plot(MOE, A, B, C, data = ABC.Interact.dat)
df = data.frame(Ind, Condition, Phase, dur)
interaction.ABC.plot(dur, Ind, Condition, Phase, data = df)
View(df)
View(df)
subdf = na.omit(df)
View(subdf)
View(subdf)
interaction.ABC.plot(dur, Ind, Condition, Phase, data = subdf)
interaction.ABC.plot(dur, Condition, Phase, Ind, data = subdf)
interaction.ABC.plot(dur, Phase,Condition,  Ind, data = subdf)
# plot main effect of condition
interaction.ABC.plot(dur, Condition, Phase, Ind, data = subdf)
# plot main effect of phase
interaction.ABC.plot(dur, Phase, Condition, Ind, data = subdf)
interaction.ABC.plot(dur, Condition, Phase, Ind, data = subdf,
ylab = "Duration (sec)", scales(list(x = list(at(0,1))))
)
interaction.ABC.plot(dur, Condition, Phase, Ind, data = subdf,
ylab = "Duration (sec)", scales(list(x = at(0,1))))
interaction.ABC.plot(dur, Condition, Phase, Ind, data = subdf,
ylab = "Duration (sec)", scales(list(x = tick.number(0,1))))
subdf3911 = data.frame(df[Ind = 3911])
subdf3911 = data.frame(df[Ind == 3911])
Ind[Ind < 4000]
View(subdf)
View(subdf)
str(subdf)
subdf[subdf$Ind == '3911',]
subdf3911 = subdf[subdf$Ind == '3911',]
subdf4057 = subdf[subdf$Ind == '4057',]
View(subdf4057)
View(subdf3911)
interaction.plot(subdf4057$Phase, subdf4057$Condition, subdf4057$dur)
interaction.plot(subdf4057$Phase, subdf4057$Condition, subdf4057$dur,
xlab = "Dive Phase",
ylab = "Mean Duration (sec)")
interaction.plot(subdf4057$Phase, subdf4057$Condition, subdf4057$dur,
xlab = "Dive Phase",
ylab = "Mean Duration (sec)"
trace.label = "Condition")
interaction.plot(subdf4057$Phase, subdf4057$Condition, subdf4057$dur,
xlab = "Dive Phase",
ylab = "Mean Duration (sec)",
trace.label = "Condition")
par(mfrow=c(2,1))
interaction.plot(subdf4057$Phase, subdf4057$Condition, subdf4057$dur,
xlab = "Dive Phase",
ylab = "Mean Duration (sec)",
trace.label = "Condition")
interaction.plot(subdf4057$Condition, subdf4057$Phase, subdf4057$dur,
xlab = "Dive Phase",
ylab = "Mean Duration (sec)",
trace.label = "Condition")
interaction.plot(subdf4057$Condition, subdf4057$Phase, subdf4057$dur,
xlab = "Condition",
ylab = "Mean Duration (sec)",
trace.label = "Dive Phase")
library(R.matlab)
library(agricolae)
## set directory and load data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("allCT.mat") # Data from Feb 15 2016
setwd("~/Documents/R")
Condition <- as.factor(dat$condition)
Phase <- as.factor(dat$portion)
library(R.matlab)
library(agricolae)
## set directory and load data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("allCT.mat") # Data from Feb 15 2016
setwd("~/Documents/R")
# set up factors
Condition <- as.factor(dat$condition)
Phase <- as.factor(dat$portion)
154*2
CT.linear.model <- lm(dat$allCT ~ Condition*Phase)
CT.aov <- anova(CT.linear.model)
CT.aov
plot(CT.aov)
plot(CT.linear.model)
TukeyHSD(CT.aov)
TukeyHSD(aov(CT.linear.model))
plot(dat$all.CT ~ Condition*Phase)
plot(dat$allCT ~ Condition*Phase)
interaction.plot(Phase,Condition,dat$allCT)
ni.linear.model <- lm(dat$allni ~ Condition*Phase)
ni.aov <- anova(ni.linear.model)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(dat$allni ~ Condition*Phase)
TukeyHSD(aov(ni.linear.model))
interaction.plot(Phase,Condition,dat$allni)
interaction.plot(Condition,Phasedat$allni)
interaction.plot(Condition,Phase,dat$allni)
ni.aov
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
anova(st.linear.model)
interaction.plot(Phase,Condition,dat$allst)
plot(dat$allst ~ Condition*Phase)
st.linear.model <- lm(dat$allst ~ Condition*Phase)
st.linear.model
anova(st.linear.model)
TukeyHSD(anova(st.linear.model))
TukeyHSD(aov(st.linear.model))
interaction.plot(Phase,Condition,dat$allst)
interaction.plot(Condition,Phase,dat$allst)
st.linear.model <- lm(dat$allst ~ Condition + Phase)
anova(st.linear.model)
source('~/.active-rstudio-document', echo=TRUE)
interaction.plot(Phase,Condition,dat$alleta)
plot(dat$alleta ~ Phase*Condition)
2.201E-5
0.0002201
eta.linear.model <- lm(dat$alleta ~ Condition + Phase)
anova(eta.linear.model)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(R.matlab)
library(agricolae)
## set directory and load data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSRvars.mat") ## MAKE SURE THESE ARE UPDATED DATA WITH PROPER DIVE NUMBERS
setwd("~/Documents/R")
library(R.matlab)
library(agricolae)
## set directory and load data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSRvars.mat") ## MAKE SURE THESE ARE UPDATED DATA WITH PROPER DIVE NUMBERS
setwd("~/Documents/R")
Ind <- as.factor(dat$indv)
Condition <- as.factor(dat$cond)
Phase <- as.factor(dat$phase.ifi)
Phase <- as.factor(dat$phase.hz)
hz.linear.model <- lm(dat$hz.all ~ Ind + Condition + Phase)
hz.aov <- anova(hz.linear.model)
TukeyHSD(aov(hz.linear.model))
plot(dat$hz.all ~ Ind*Condition*Phase)
boxplot(dat$hz.all ~ Condition*Phase,at =c(1,2, 4,5, 7,8, 10,11))
interaction.ABC.plot(dat$hz.all, Condition, Phase, Ind, data = subdf,
ylab = "Duration (sec)", scales(list(x = tick.number(0,1))))
library(dae)
library(dae)
interaction.ABC.plot(dat$hz.all, Condition, Phase, Ind, data = subdf,
+                      ylab = "Duration (sec)", scales(list(x = tick.number(0,1))))
interaction.ABC.plot(dat$hz.all, Condition, Phase, Ind, data = subdf,
ylab = "Duration (sec)", scales(list(x = tick.number(0,1))))
interaction.ABC.plot(dat$hz.all, Condition, Phase, Ind, data = dat,
ylab = "Duration (sec)", scales(list(x = tick.number(0,1))))
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSRvars.mat") ## Data updated and resaved Feb 17 2016
setwd("~/Documents/R")
# set up factors
Ind <- as.factor(dat$indv)
Condition <- as.factor(dat$cond)
Phase <- as.factor(dat$phase.hz)
hz.linear.model <- lm(dat$hz.all ~ Ind + Condition + Phase)
hz.aov <- anova(hz.linear.model)
hz.aov
df = data.frame(Ind, Condition, Phase, dat$hz.all)     # create data frame
plot(dat$hz.all ~ Ind*Condition*Phase)
interaction.ABC.plot(hz.all, Phase, Condition, Ind, data = df)
library(R.matlab)
library(agricolae)
library(dae)
## set directory and load data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSRvars.mat") ## Data updated and resaved Feb 17 2016
setwd("~/Documents/R")
# set up factors
Ind <- as.factor(dat$indv)
Condition <- as.factor(dat$cond)
Phase <- as.factor(dat$phase.hz)
hz.linear.model <- lm(dat$hz.all ~ Ind + Condition + Phase)
hz.aov <- anova(hz.linear.model)
df = data.frame(Ind, Condition, Phase, dat$hz.all)     # create data frame
df = data.frame(Ind, Condition, Phase, dat$hz.all)     # create data frame
interaction.ABC.plot(hz.all, Phase, Condition, Ind, data = df)
interaction.ABC.plot(dat.hz.all, Phase, Condition, Ind, data = df)
interaction.ABC.plot(dat.hz.all,Condition,  Phase, Ind, data = df)
df = data.frame(Ind, Condition, Phase, dat$hz.all)     # create data frame
df = na.omit(df)                             # remove NAs
interaction.ABC.plot(dat.hz.all, Phase, Condition, Ind, data = df)
df = data.frame(Ind, Condition, Phase, dat$hz.all)     # create data frame
df = na.omit(df)                             # remove NAs
interaction.ABC.plot(dat.hz.all,Condition,  Phase, Ind, data = df)
hz.linear.model <- lm(dat$hz.all ~ Ind*Condition*Phase)
anova(hz.linear.model)
TukeyHSD(aov(hz.linear.model))
hz.linear.model <- lm(dat$hz.all ~ Ind+Condition+Phase)
TukeyHSD(aov(hz.linear.model))
hz.linear.model <- lm(dat$hz.all ~ Ind+Condition+Phase)
hz.aov <- anova(hz.linear.model)
hz.aov
interaction.ABC.plot(dat.hz.all, Phase, Condition, Ind, data = df)
TukeyHSD(aov(hz.linear.model))
## load duration data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSdur.mat")
setwd("~/Documents/R")
# concatenate
dur <- c(dat$dur.highasc.3911,dat$dur.highasc.4057,dat$dur.highbot.3911,dat$dur.highbot.4057,
dat$dur.highdesc.3911,dat$dur.highdesc.4057,dat$dur.highsurf.3911,dat$dur.highsurf.4057,
dat$dur.lowasc.3911,dat$dur.lowasc.4057,dat$dur.lowbot.3911,dat$dur.lowbot.4057,
dat$dur.lowdesc.3911,dat$dur.lowdesc.4057,dat$dur.lowsurf.3911,dat$dur.lowsurf.4057)
ind <- c(rep(3911,271*53),rep(4057,616*6),rep(3911,242*53),rep(4057,504*6),
rep(3911,64*53),rep(4057,116*6),rep(3911,201*52),rep(4057,441*5),
rep(3911,233*101),rep(4057,387*11),rep(3911,198*101),rep(4057,267*11),
rep(3911,57*101),rep(4057,158*11),rep(3911,88*100),rep(4057,308*10))
cond <- c(rep(1,271*53),rep(1,616*6),rep(1,242*53),rep(1,504*6),
rep(1,64*53),rep(1,116*6),rep(1,201*52),rep(1,441*5),
rep(0,233*101),rep(0,387*11),rep(0,198*101),rep(0,267*11),
rep(0,57*101),rep(0,158*11),rep(0,88*100),rep(0,308*10))
phase <- c(rep(1,271*53),rep(1,616*6),rep(0,242*53),rep(0,504*6),
rep(-1,64*53),rep(-1,116*6),rep(2,201*52),rep(2,441*5),
rep(1,233*101),rep(1,387*11),rep(0,198*101),rep(0,267*11),
rep(-1,57*101),rep(-1,158*11),rep(2,88*100),rep(2,308*10))
# set up factors
Ind <- as.factor(ind)
Condition <- as.factor(cond)
Phase <- as.factor(phase)
dur.linear.model <- lm(dur ~ Ind*Condition*Phase)
dur.aov <- anova(dur.linear.model)
dur.aov
TukeyHSD(aov(dur.linear.model))
df = data.frame(Ind, Condition, Phase, dur)     # create data frame
subdf = na.omit(df)                             # remove NAs
# plot main effect of condition
interaction.ABC.plot(dur, Condition, Phase, Ind, data = subdf,
ylab = "Duration (sec)", scales(list(x = tick.number(0,1))))
tukdur <- TukeyHSD(aov(dur.linear.model))
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSdur.mat")
setwd("~/Documents/R")
# concatenate
dur <- c(dat$dur.highasc.3911,dat$dur.highasc.4057,dat$dur.highbot.3911,dat$dur.highbot.4057,
dat$dur.highdesc.3911,dat$dur.highdesc.4057,dat$dur.highsurf.3911,dat$dur.highsurf.4057,
dat$dur.lowasc.3911,dat$dur.lowasc.4057,dat$dur.lowbot.3911,dat$dur.lowbot.4057,
dat$dur.lowdesc.3911,dat$dur.lowdesc.4057,dat$dur.lowsurf.3911,dat$dur.lowsurf.4057)
ind <- c(rep(3911,271*53),rep(4057,616*6),rep(3911,242*53),rep(4057,504*6),
rep(3911,64*53),rep(4057,116*6),rep(3911,201*52),rep(4057,441*5),
rep(3911,233*101),rep(4057,387*11),rep(3911,198*101),rep(4057,267*11),
rep(3911,57*101),rep(4057,158*11),rep(3911,88*100),rep(4057,308*10))
cond <- c(rep(1,271*53),rep(1,616*6),rep(1,242*53),rep(1,504*6),
rep(1,64*53),rep(1,116*6),rep(1,201*52),rep(1,441*5),
rep(0,233*101),rep(0,387*11),rep(0,198*101),rep(0,267*11),
rep(0,57*101),rep(0,158*11),rep(0,88*100),rep(0,308*10))
phase <- c(rep(1,271*53),rep(1,616*6),rep(0,242*53),rep(0,504*6),
rep(-1,64*53),rep(-1,116*6),rep(2,201*52),rep(2,441*5),
rep(1,233*101),rep(1,387*11),rep(0,198*101),rep(0,267*11),
rep(-1,57*101),rep(-1,158*11),rep(2,88*100),rep(2,308*10))
# set up factors
Ind <- as.factor(ind)
Condition <- as.factor(cond)
Phase <- as.factor(phase)
dur.linear.model <- lm(dur ~ Ind*Condition*Phase)
dur.aov <- anova(dur.linear.model)
tukdur <- TukeyHSD(aov(dur.linear.model))
## load duration data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSdur.mat")
setwd("~/Documents/R")
# concatenate
dur <- c(dat$dur.highasc.3911,dat$dur.highasc.4057,dat$dur.highbot.3911,dat$dur.highbot.4057,
dat$dur.highdesc.3911,dat$dur.highdesc.4057,dat$dur.highsurf.3911,dat$dur.highsurf.4057,
dat$dur.lowasc.3911,dat$dur.lowasc.4057,dat$dur.lowbot.3911,dat$dur.lowbot.4057,
dat$dur.lowdesc.3911,dat$dur.lowdesc.4057,dat$dur.lowsurf.3911,dat$dur.lowsurf.4057)
ind <- c(rep(3911,271*53),rep(4057,616*6),rep(3911,242*53),rep(4057,504*6),
rep(3911,64*53),rep(4057,116*6),rep(3911,201*52),rep(4057,441*5),
rep(3911,233*101),rep(4057,387*11),rep(3911,198*101),rep(4057,267*11),
rep(3911,57*101),rep(4057,158*11),rep(3911,88*100),rep(4057,308*10))
cond <- c(rep(1,271*53),rep(1,616*6),rep(1,242*53),rep(1,504*6),
rep(1,64*53),rep(1,116*6),rep(1,201*52),rep(1,441*5),
rep(0,233*101),rep(0,387*11),rep(0,198*101),rep(0,267*11),
rep(0,57*101),rep(0,158*11),rep(0,88*100),rep(0,308*10))
phase <- c(rep(1,271*53),rep(1,616*6),rep(0,242*53),rep(0,504*6),
rep(-1,64*53),rep(-1,116*6),rep(2,201*52),rep(2,441*5),
rep(1,233*101),rep(1,387*11),rep(0,198*101),rep(0,267*11),
rep(-1,57*101),rep(-1,158*11),rep(2,88*100),rep(2,308*10))
# set up factors
Ind <- as.factor(ind)
Condition <- as.factor(cond)
Phase <- as.factor(phase)
dur.linear.model <- lm(dur ~ Ind*Condition*Phase)
dur.aov <- anova(dur.linear.model)
dim(Ind)
size(Ind)
dim(ind)
dim(dur)
source('~/.active-rstudio-document', echo=TRUE)
dur.aov
tukdur
library(multcomp)
install.packages(multcomp)
install.packages("multcomp")
tuk <- glht(dur.aov, linfct = mcp(tx = "Tukey"))
summary(tuk)          # standard display
tuk.cld <- cld(tuk)   # letter-based display
opar <- par(mai=c(1,1,1.5,1))
plot(tuk.cld)
par(opar)
library(multcomp)
tuk <- glht(dur.aov, linfct = mcp(tx = "Tukey"))
summary(tuk)          # standard display
tuk.cld <- cld(tuk)   # letter-based display
opar <- par(mai=c(1,1,1.5,1))
plot(tuk.cld)
par(opar)
tuk <- glht(aov(dur.linear.model), linfct = mcp(tx = "Tukey"))
summary(tuk)          # standard display
tuk.cld <- cld(tuk)   # letter-based display
opar <- par(mai=c(1,1,1.5,1))
plot(tuk.cld)
par(opar)
tuk <- glht(aov(dur.linear.model))
summary(tuk)
tuk.cld <- cld(tuk)
opar <- par(mai=c(1,1,1.5,1))
> plot(tuk.cld)
opar <- par(mai=c(1,1,1.5,1))
plot(tuk.cld)
tuk.cld
cld(tuk)
dur.linear.model <- lm(dur ~ Ind*Condition*Phase)
dur.aov <- anova(dur.linear.model)
tuk <- glht(aov(dur.linear.model))
tuk
summary(tuk)
dur.linear.model <- lm(dur ~ Ind*Condition*Phase,data = subdf)
dur.aov <- anova(dur.linear.model, data = subdf)
dur.aov <- anova(dur.linear.model)
tuk <- glht(aov(dur.linear.model))
summary(tuk)
HSD.test(aov(dur.linear.model),"tx",group = TRUE)
test<-HSD.test(aov(dur.linear.model),"tx",group = TRUE)
test
summary(test)
test<-HSD.test(aov(dur.linear.model),"tx")
test
help tukeyHSD
plot(TukeyHSD(aov(dur.linear.model)))
source('~/.active-rstudio-document', echo=TRUE)
dur.aov <- anova(dur.linear.model)
tukdur <-TukeyHSD(aov(dur.linear.model))
tukdur
citation()
source('~/Documents/R/TOWR/FSRstats.R', echo=TRUE)
mean(dat$dur.highasc.3911)
nanmean(dat$dur.highasc.3911)
mean(dat$dur.highasc.3911,NA.RM = TRUE)
mean(dur)
dat$dur.highasc.3911 <- gsub("NaN", "NA", dat$dur.highasc.3911)
mean(dat$dur.highasc.3911)
mean(dat$dur.highasc.3911,NA.RM = TRUE)
mean(dat$dur.highasc.3911,NA.RM = FALSE)
source('~/Documents/R/TOWR/FSRstats.R', echo=TRUE)
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSRvars.mat") ## Data updated and resaved Feb 17 2016
setwd("~/Documents/R")
source('~/Documents/R/TOWR/PropulsiveEfficiencyStats.R', echo=TRUE)
mean(dat$alleta[which(Condition == 0)])
mean(dat$alleta[which(Condition == 1)])
mean(dat$alleta[which(Condition == 1)],NA.RM = TRUE)
mean(dat$alleta[which(Condition == 1)],NA.RM = "TRUE")
mean(dat$alleta[which(Condition == 1)],na.rm = "TRUE")
max(dat$alleta[which(Condition == 0)])
max(dat$alleta[which(Condition == 1)],na.rm = "TRUE")
library(R.matlab)
library(agricolae)
setwd("~/Documents/MATLAB/DQ/DQ2013/Glides")
data <- readMat('Data_Readmatv6.mat')
library(R.matlab)
library(agricolae)
setwd("~/Documents/MATLAB/DQ/DQ2013/Glides")
data <- readMat('Data_Readmatv6.mat')
library(R.matlab)
library(agricolae)
setwd("~/Documents/MATLAB/DQ/DQ2013/Glides")
data <- readMat('Data_Readmatv6.mat')
load("~/Documents/MATLAB/DQ/DQ2013/Glides/Data_Readmatv6.mat")
data <- readMat('Data_Readmat.mat')
data <- readMat('Data_Readmatv6.mat')
data <- readMat('Data_Read.mat')
data <- readMat('Data_Read.mat')
data <- readMat('Data_ReadNew.mat')
setwd("~/Documents/MATLAB/DQ/DQ2013/Glides")
wd
getwd
data <- readMat('Data_ReadNew.mat')
data <- readMat('Data_ReadNew.mat')
library(R.matlab)
library(agricolae)
setwd("~/Documents/MATLAB/DQ/DQ2013/Glides")
data <- readMat('Data_ReadNew.mat')
# individual and tag condition are factors
Ind <- as.factor(Ind)
Tag <- as.factor(Tag)
# set up linear model
linear.model <- lm(Cd.mn ~ Ind + Tag)
aov <- anova(linear.model)
Ind <- as.factor(data$Ind)
Tag <- as.factor(data$Tag)
setwd("~/Documents/MATLAB/DQ/DQ2013/Glides")
data <- readMat('Data_ReadNew.mat')
Cdmean <- data$Cd.m=mn
CDAS <- data$CDAS
# individual and tag condition are factors
Ind <- as.factor(data$Ind)
Tag <- as.factor(data$Tag)
Cdmean <- data$Cd.mn
linear.model <- lm(Cdmean ~ Ind + Tag)
aov <- anova(linear.model)
library(R.matlab)
library(agricolae)
linear.model <- lm(Cdmean ~ Ind + Tag)
View(Ind)
bartlett.test(Cdmean ~ Tag)
load('Data_Readmat')
load('Data_Readmatv6')
data <- readMat('Data_Readmatv6.mat')
library(R.matlab)
library(agricolae)
setwd("~/Documents/MATLAB/DQ/DQ2013/Glides")
data <- readMat('Data_ReadNew.mat')
Cdmean <- data$Cd.mn
CDAS <- data$CDAS
library(R.matlab)
library(agricolae)
setwd("~/Documents/MATLAB/DQ/DQ2013/Glides")
data <- readMat('Data_ReadNew.mat')
Cdmean <- data$Cd.mn
CDAS <- data$CDAS
Ind <- as.factor(data$Ind)
Tag <- as.factor(data$Tag)
bartlett.test(Cdmean ~ Tag)
View(Cdmean)
View(CDAS)
data <- readMat('Data_ReadNew.mat')
Cdmean <- data$Cd.mn
CDAS <- data$CDAS
view(Cdmean)
View(Cdmean)
Ind <- as.factor(data$Ind)
Tag <- as.factor(data$Tag)
bartlett.test(Cdmean ~ Tag)
bartlett.test(Cdmean ~ data.Tag)
bartlett.test(Cdmean ~ data$Tag)
bartlett.test(CDAS ~ data$Tag) # Method 2
batlett.test(data$dur ~ data$Tag) # Duration
bartlett.test(data$dur ~ data$Tag) # Duration
Dur <- data$dur
bartlett.test(t(data$dur) ~ data$Tag) # Duration
kruskal.test(Cdmean ~ Tag)
kruskal.test(Cdmean ~ data$Tag)
kruskal.test(CDAS ~ data$Tag)
kruskal.test(t(data$dur)~ data$Tag)
ibrary(R.matlab)
library(agricolae)
setwd("~/Documents/MATLAB/DQ/DQ2013/Glides")
data <- readMat('Data_ReadNew.mat')
Cdmean <- data$Cd.mn
CDAS <- data$CDAS
library(R.matlab)
library(agricolae)
setwd("~/Documents/MATLAB/DQ/DQ2013/Glides")
data <- readMat('Data_ReadNew.mat')
Cdmean <- data$Cd.mn
CDAS <- data$CDAS
# test for homogeneity of variance: Levene's test (better for non-normal data)
bartlett.test(Cdmean ~ data$Tag) # Method 1
bartlett.test(CDAS ~ data$Tag) # Method 2
bartlett.test(t(data$dur) ~ data$Tag) # Duration
data <- readMat('Data_ReadNew.mat')
kruskal.test(data$sspeed~ data$Tag)
kruskal.test(data$espeed~ data$Tag)
plot(data$sspeed ~ data$Tag)
plot(data$espeed ~ data$Tag)
plot(Cdmean ~ data$Tag)
plot(CDAS ~ data$Tag)
plot(Cdmean ~ data$Tag)
plot(CDAS ~ data$Tag)
Tag <- as.factor(data$Tag)
foldchange <- matrix(NA, nrow=1, ncol=3)
foldchange[1] <- mean(Cdmean[which(Tag == 1)])/mean(Cdmean[which(Tag == 0)])
foldchange[2] <- mean(Cdmean[which(Tag == 3)])/mean(Cdmean[which(Tag == 0)])
foldchange[3] <- mean(Cdmean[which(Tag == 5)])/mean(Cdmean[which(Tag == 0)])
foldchange[4] <- mean(CDAS[which(Tag == 1)])/mean(CDAS[which(Tag == 0)])
foldchange[5] <- mean(CDAS[which(Tag == 3)])/mean(CDAS[which(Tag == 0)])
foldchange[6] <- mean(CDAS[which(Tag == 5)])/mean(CDAS[which(Tag == 0)])
plot(c(1,2,3),foldchange[1,2,3])
plot(c(1,2,3),foldchange(1,2,3))
plot(c(1,2,3),foldchange[1:3])
points(c(1,2,3),foldchange[1:3],col = 'black')
points(c(1,2,3),foldchange[4:6],col = 'blue')
foldchange
plot(c(1,2,3),foldchange[4:6],col = 'blue')
points(c(1,2,3),foldchange[1:3],col = 'black')
bartlett.test(Cdmean ~ data$Tag) # Method 1
kruskal.test(Cdmean ~ data$Tag) # Method 1
kruskal.test(CDAS ~ data$Tag) # Method 2
bartlett.test(CDAS ~ data$Tag) # Method 2
kruskal.test(t(data$dur)~ data$Tag) # Duration
bartlett.test(t(data$dur) ~ data$Tag) # Duration
source('~/Documents/R/DQ_R/GlideSuccess.R', echo=TRUE)
data$Success
